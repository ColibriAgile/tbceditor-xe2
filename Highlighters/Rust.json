{
   "Highlighter":{
      "Info":{
         "General":{
            "Version":"1.0",
            "Date":"6.10.2015",
            "Sample":[
               "// Hello World in Rust\r\n",
               "\r\n",
               "fn main() {\r\n",
               "    println!(\"Hello, world!\");\r\n",
               "}"
            ]
         },
         "Author":{
            "Name":"Lasse Rautiainen",
            "Mail":"lasse@bonecode.com"
         }
      },
      "MainRules":{
         "Attributes":{
            "Element":"Editor"
         },
         "SubRules":{
            "Range":[
               {
                  "Type":"Comment",
                  "Attributes":{
                     "Element":"Comment",
                     "ParentBackground":true
                  },
                  "Properties":{
                     "CloseOnEndOfLine":true
                  },
                  "TokenRange":{
                     "Open":"//"
                  }
               },
               {
                  "Type":"String",
                  "Attributes":{
                     "Element":"String",
                     "ParentBackground":true
                  },
                  "Properties":{
                     "CloseOnEndOfLine":true
                  },
                  "TokenRange":{
                     "Open":"\"",
                     "Close":"\""
                  },
                  "SubRules":{
                     "Range":[
                        {
                           "Type":"String",
                           "Attributes":{
                              "Element":"String",
                              "ParentBackground":true
                           },
                           "Properties":{
                              "CloseOnEndOfLine":true,
                              "CloseOnTerm":true
                           },
                           "TokenRange":{
                              "Open":"\\\"",
                              "Close":""
                           }
                        },
                        {
                           "Type":"String",
                           "Attributes":{
                              "Element":"String",
                              "ParentBackground":true
                           },
                           "Properties":{
                              "CloseOnEndOfLine":true,
                              "CloseOnTerm":true
                           },
                           "TokenRange":{
                              "Open":"\\\\",
                              "Close":""
                           }
                        }
                     ]
                  }
               },
               {
                  "Type":"Directive",
                  "Attributes":{
                     "Element":"Directive",
                     "ParentBackground":true
                  },
                  "Properties":{
                     "CloseOnEndOfLine":true
                  },
                  "TokenRange":{
                     "Open":"#"
                  }
               },
               {
                  "Type":"Hex",
                  "Attributes":{
                     "Element":"Number",
                     "ParentBackground":true
                  },
                  "Delimiters":"*/+-=\\|&()[]{}`~!@,$%^?:;'\".><#'ghijklmnopqrstuwvyzåäö",
                  "Properties":{
                     "CloseOnTerm":true,
                     "CloseOnEndOfLine":true
                  },
                  "TokenRange":{
                     "Open":"0"
                  }
               }
            ],
            "KeyList":[
               {
                  "Name":"Keywords",
                  "Type":"ReservedWord",
                  "Words":[
                     "abstract",
                     "alignof",
                     "as",
                     "become",
                     "box",
                     "break",
                     "const",
                     "continue",
                     "crate",
                     "do",
                     "else",
                     "enum",
                     "extern",
                     "false",
                     "final",
                     "fn",
                     "for",
                     "if",
                     "impl",
                     "in",
                     "let",
                     "loop",
                     "macro",
                     "match",
                     "mod",
                     "move",
                     "mut",
                     "offsetof",
                     "override",
                     "priv",
                     "proc",
                     "pub",
                     "pure",
                     "ref",
                     "return",
                     "self",
                     "sizeof",
                     "static",
                     "struct",
                     "super",
                     "trait",
                     "true",
                     "type",
                     "typeof",
                     "unsafe",
                     "unsized",
                     "use",
                     "virtual",
                     "where",
                     "while",
                     "yield"
                  ],
                  "Attributes":{
                     "Element":"ReservedWord",
                     "ParentBackground":true
                  }
               },
               {
                  "Type":"Symbol",
                  "Words":[
                     ":",
                     ";",
                     "<",
                     ">",
                     "=",
                     "/",
                     "%",
                     "&",
                     "|",
                     "^",
                     "*",
                     ".",
                     ",",
                     "-",
                     "+",
                     "(",
                     ")",
                     "[",
                     "]",
                     "{",
                     "}"
                  ],
                  "Attributes":{
                     "Element":"Symbol",
                     "ParentBackground":true
                  }
               }
            ],
            "Set":[
               {
                  "Type":"Numbers",
                  "Symbols":"0123456789",
                  "Attributes":{
                     "Element":"Number",
                     "ParentBackground":true
                  }
               },
               {
                  "Type":"Float",
                  "Symbols":".0123456789",
                  "Attributes":{
                     "Element":"Number",
                     "ParentBackground":true
                  }
               }
            ]
         }
      }
   },
   "CodeFolding":{
      "Ranges":[
         {
            "Options":{
               "StringEscapeChar":"\\"
            },
            "SkipRegion":[
               {
                  "OpenToken":"\"",
                  "CloseToken":"\"",
                  "RegionType":"String"
               },
               {
                  "OpenToken":"//",
                  "RegionType":"SingleLine"
               }
            ],
            "FoldRegion":[
               {
                  "OpenToken":"{",
                  "CloseToken":"}"
               }
            ]
         }
      ]
   },
   "MatchingPair":{
      "Pairs":[
         {
            "OpenToken":"(",
            "CloseToken":")"
         },
         {
            "OpenToken":"[",
            "CloseToken":"]"
         },
         {
            "OpenToken":"{",
            "CloseToken":"}"
         }
      ]
   },
   "CompletionProposal":{
      "SkipRegion":[
         {
            "OpenToken":"\"",
            "CloseToken":"\"",
            "RegionType":"String"
         },
         {
            "OpenToken":"//",
            "RegionType":"SingleLine"
         }
      ]
   }
}
